#!/bin/bash

# This is a wrapper script for interacting with the files in './scripts/'.
# 
# Usage: ./bdocs [option]

set -e

# The project's root directory.
export PROJECT_ROOT="$(dirname "$(realpath "$0")")"

# All scripts exported so they can source bdocs and call each other if needed.
export DEPLOY="$PROJECT_ROOT/scripts/create_deploy_text.sh"
export RELEASE="$PROJECT_ROOT/scripts/create_release_text.sh"
export TLINKS="$PROJECT_ROOT/scripts/transform_reference_links.py"
export RLINKS="$PROJECT_ROOT/scripts/remove_unused_reference_links.rb"
export REDIRECTS="$PROJECT_ROOT/scripts/list_redirect_urls.sh"

# Displays usage for bdocs
display_help() {
    cat << EOF
bdocs is a CLI tool for executing Braze Docs scripts.

USAGE:
  ./bdocs [option]

OPTIONS:
  deploy       Create the deploy body text for weekly deployments
  release      Create the release body text for monthly releases
  tlinks       Transform reference links to inline links on 1 or more pages
  rlinks       Remove reference links that are not being used on 1 or more pages
  redirects    List the old URLs for all new redirects in this branch
  help         Display this help message and exit

EOF
}

# If a file or directory is required, check if it was passed and block if not.
require_path_or_file() {
    if [[ -z "$1" ]]; then
        echo "Error: A file or directory path is required."
        exit 1
    fi    
}

# Check if no arguments were provided
if [[ $# -eq 0 ]]; then
    display_help
    exit 1
fi

# Argument parsing
case $1 in
    deploy)
        if [[ $# -eq 3 ]]; then
            "$DEPLOY" "$2" "$3"
        else
            "$DEPLOY"
        fi
        ;;
    release)
        "$RELEASE"
        ;;
    tlinks)
        require_path_or_file "$2" && "$TLINKS" "$2"

        # Run rlinks next to clean up unused reference links.
        "$RLINKS" "$2"
        ;;
    rlinks)
        require_path_or_file "$2" && "$RLINKS" "$2"
        ;;
    redirects)
        if [[ $# -eq 2 ]]; then
            "$REDIRECTS" "$2"
        else
            "$REDIRECTS"
        fi
        ;;
    help)
        display_help
        ;;
    *)
        echo "Error: Invalid choice: '$1'. To see all options, run: ./bdocs help"
        exit 1
        ;;
esac
